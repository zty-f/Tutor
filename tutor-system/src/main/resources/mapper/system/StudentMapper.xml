<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zty.system.mapper.StudentMapper">
    
    <resultMap type="Student" id="StudentResult">
        <result property="userId"    column="user_id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="userName"    column="user_name"    />
        <result property="nickName"    column="nick_name"    />
        <result property="userType"    column="user_type"    />
        <result property="email"    column="email"    />
        <result property="phonenumber"    column="phonenumber"    />
        <result property="sex"    column="sex"    />
        <result property="avatar"    column="avatar"    />
        <result property="password"    column="password"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="loginIp"    column="login_ip"    />
        <result property="loginDate"    column="login_date"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <resultMap id="StudentSysStudentResult" type="Student" extends="StudentResult">
        <collection property="sysStudent" notNullColumn="sub_id" javaType="com.zty.system.domain.SysStudent" resultMap="SysStudentResult" />
    </resultMap>

    <resultMap type="SysStudent" id="SysStudentResult">
        <result property="id"    column="sub_id"    />
        <result property="userId"    column="sub_user_id"    />
        <result property="location"    column="sub_location"    />
        <result property="university"    column="sub_university"    />
        <result property="major"    column="sub_major"    />
        <result property="background"    column="sub_background"    />
        <result property="teachWay"    column="sub_teach_way"    />
        <result property="authStatus"    column="sub_auth_status"    />
        <result property="delFlag"    column="sub_del_flag"    />
        <result property="createBy"    column="sub_create_by"    />
        <result property="createTime"    column="sub_create_time"    />
        <result property="updateBy"    column="sub_update_by"    />
        <result property="updateTime"    column="sub_update_time"    />
        <result property="remark"    column="sub_remark"    />
    </resultMap>

    <sql id="selectStudentVo">
        select user_id, dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar, password, status, del_flag, login_ip, login_date, create_by, create_time, update_by, update_time, remark from sys_user
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="StudentResult">
        select a.user_id, a.dept_id, a.user_name, a.nick_name, a.user_type, a.email, a.phonenumber, a.sex, a.avatar, a.status, a.del_flag, a.login_ip, a.login_date, a.create_by, a.create_time, a.update_by, a.update_time, a.remark
        from sys_user a
        left join sys_user_role b on b.user_id = a.user_id
        where a.del_flag = '0' and b.role_id = '3'
        <where>  
            <if test="deptId != null "> and a.dept_id = #{deptId}</if>
            <if test="userName != null  and userName != ''"> and a.user_name like concat('%', #{userName}, '%')</if>
            <if test="nickName != null  and nickName != ''"> and a.nick_name like concat('%', #{nickName}, '%')</if>
            <if test="email != null  and email != ''"> and a.email = #{email}</if>
            <if test="phonenumber != null  and phonenumber != ''"> and a.phonenumber = #{phonenumber}</if>
            <if test="sex != null  and sex != ''"> and a.sex = #{sex}</if>
            <if test="avatar != null  and avatar != ''"> and a.avatar = #{avatar}</if>
            <if test="status != null  and status != ''"> and a.status = #{status}</if>
            <if test="loginIp != null  and loginIp != ''"> and a.login_ip = #{loginIp}</if>
            <if test="loginDate != null "> and a.login_date = #{loginDate}</if>
        </where>
    </select>
    
    <select id="selectStudentByUserId" parameterType="Long" resultMap="StudentSysStudentResult">
        select a.user_id, a.dept_id, a.user_name, a.nick_name, a.user_type, a.email, a.phonenumber, a.sex, a.avatar, a.password, a.status, a.del_flag, a.login_ip, a.login_date, a.create_by, a.create_time, a.update_by, a.update_time, a.remark,
 b.id as sub_id, b.user_id as sub_user_id, b.location as sub_location, b.university as sub_university, b.major as sub_major, b.background as sub_background, b.teach_way as sub_teach_way, b.auth_status as sub_auth_status, b.del_flag as sub_del_flag, b.create_by as sub_create_by, b.create_time as sub_create_time, b.update_by as sub_update_by, b.update_time as sub_update_time, b.remark as sub_remark
        from sys_user a
        left join sys_student b on b.user_id = a.user_id
        where a.user_id = #{userId}
    </select>
        
    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="userId">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">dept_id,</if>
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="nickName != null and nickName != ''">nick_name,</if>
            <if test="userType != null">user_type,</if>
            <if test="email != null">email,</if>
            <if test="phonenumber != null">phonenumber,</if>
            <if test="sex != null">sex,</if>
            <if test="avatar != null">avatar,</if>
            <if test="password != null">password,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="loginIp != null">login_ip,</if>
            <if test="loginDate != null">login_date,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptId != null">#{deptId},</if>
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="nickName != null and nickName != ''">#{nickName},</if>
            <if test="userType != null">#{userType},</if>
            <if test="email != null">#{email},</if>
            <if test="phonenumber != null">#{phonenumber},</if>
            <if test="sex != null">#{sex},</if>
            <if test="avatar != null">#{avatar},</if>
            <if test="password != null">#{password},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="loginIp != null">#{loginIp},</if>
            <if test="loginDate != null">#{loginDate},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateStudent" parameterType="Student">
        update sys_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="userType != null">user_type = #{userType},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phonenumber != null">phonenumber = #{phonenumber},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="password != null">password = #{password},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="loginIp != null">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteStudentByUserId" parameterType="Long">
        update sys_user set del_flag = '2' where user_id = #{userId}
    </delete>

    <delete id="deleteStudentByUserIds" parameterType="String">
        update sys_user set del_flag = '2' where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
    
    <delete id="deleteSysStudentByUserIds" parameterType="String">
        delete from sys_student where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <delete id="deleteSysStudentByUserId" parameterType="Long">
        delete from sys_student where user_id = #{userId}
    </delete>

    <insert id="batchSysStudent">
        insert into sys_student( id, user_id, location, university, major, background, teach_way, auth_status, del_flag, create_by, create_time, update_by, update_time, remark) values
            ( #{id}, #{userId}, #{location}, #{university}, #{major}, #{background}, #{teachWay}, #{authStatus}, #{delFlag}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{remark})
    </insert>
</mapper>